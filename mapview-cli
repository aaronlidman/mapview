#!/usr/bin/env node
/* eslint-disable no-console */
'use strict';

var fs = require('fs');
var open = require('open');
var utils = require('./lib/utils');
var mapview = require('./lib/mapview');

var argv = require('minimist')(process.argv.slice(2), {
    boolean: ['n', 'quiet', 'q']
});

var mbtiles = argv._;
var accessToken = argv.MapboxAccessToken ||
  process.env.MAPBOX_ACCESS_TOKEN ||
  process.env.MapboxAccessToken;

if (argv.version || argv.v) {
    return console.log(utils.version());
} else if (!mbtiles.length) {
    return console.log(utils.usage());
} else if (!accessToken) {
    throw (new Error('missing access token, try `export MAPBOX_ACCESS_TOKEN=...`'));
}

try {
    mbtiles.forEach(function (f) {
        fs.statSync(f).isFile();
    });
} catch (e) {
    return console.error(e);
}

argv.basemap = argv.basemap || argv.base || argv.map || 'dark';

var params = {
    center: argv.center || [-122.42, 37.75],
    mbtiles: mbtiles,
    port: argv.port || 3000,
    zoom: 12,
    quiet: argv.q || argv.quiet,
    basemap: argv.basemap,
    accessToken: accessToken
};

mapview.serve(params, function (err, config) {
    if (err) throw (new Error(err));

    console.log('Serving on http://localhost:' + config.port);
    if (!argv.n) open('http://localhost:' + config.port);
});
